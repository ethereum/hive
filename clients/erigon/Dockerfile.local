# Build erigon from source using a local directory.
FROM golang:1-alpine as builder
ADD erigon /erigon
WORKDIR /erigon
RUN apk --no-cache add build-base linux-headers git bash ca-certificates libstdc++
RUN make erigon

FROM alpine:latest
RUN apk add --update bash curl jq libstdc++ libgcc

# Copy compiled binary from builder
COPY --from=builder /erigon/build/bin/* /usr/local/bin/

# Create version.txt
RUN /usr/local/bin/erigon --version | sed -e 's/erigon version \(.*\)/\1/' > /version.txt

# Add genesis mapper script
ADD genesis.json /genesis.json
ADD mapper.jq /mapper.jq

# Add the startup script
ADD erigon.sh /erigon.sh
RUN chmod +x /erigon.sh

# Add the enode URL retriever script
ADD enode.sh /hive-bin/enode.sh
RUN chmod +x /hive-bin/enode.sh


# Export the usual networking ports to allow outside access to the node
EXPOSE 8545 8546 8551 30303 30303/udp

ENTRYPOINT ["/erigon.sh"]
