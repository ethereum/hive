### Build Erigon From Git:

## Builder stage: Compiles erigon from a git repository
FROM golang:1-alpine as builder

ARG user=ledgerwatch
ARG repo=erigon
ARG branch=devel

RUN echo "Cloning: $user/$repo - $branch" \
    && apk add bash build-base ca-certificates git jq \
    && git clone --depth 1 --branch $branch https://github.com/$user/$repo \
    && cd erigon && make erigon && echo "{}" \
    | jq ".+ {\"repo\":\"$(git config --get remote.origin.url)\"}" \
    | jq ".+ {\"branch\":\"$(git rev-parse --abbrev-ref HEAD)\"}" \
    | jq ".+ {\"commit\":\"$(git rev-parse HEAD)\"}" > /version.json \
    && cp build/bin/erigon /usr/local/bin/erigon 

## Final stage: Sets up the environment for running erigon
FROM alpine:latest

# Copy compiled binary from builder
COPY --from=builder /usr/local/bin/erigon /usr/local/bin/

RUN apk add --no-cache bash gcc jq libstdc++

# Create version.txt
RUN erigon --version | sed -e 's/erigon version \(.*\)/\1/' > /version.txt

# Add genesis mapper script, startup script, and enode URL retriever script
COPY genesis.json /genesis.json
COPY mapper.jq /mapper.jq
COPY erigon.sh /erigon.sh
COPY enode.sh /hive-bin/enode.sh

# Set execute permissions for scripts
RUN chmod +x /erigon.sh /hive-bin/enode.sh

# Expose networking ports
EXPOSE 8545 8546 8551 30303 30303/udp

ENTRYPOINT ["/erigon.sh"]
