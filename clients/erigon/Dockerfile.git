# Builds erigon from a git repository.
FROM golang:1-alpine as builder
ARG user=ledgerwatch
ARG repo=erigon
ARG branch=devel

RUN \
    apk add --update build-base linux-headers git bash jq          \
    ca-certificates libstdc++ libgcc musl-dev                   && \
    git clone --depth 1 --branch $branch                           \
    https://github.com/$user/$repo                              && \
    (cd erigon && make erigon)                                  && \
    (cd erigon                                                  && \
    echo "{}"                                                      \
    | jq ".+ {\"repo\":\"$(git config --get remote.origin.url)\"}" \
    | jq ".+ {\"branch\":\"$(git rev-parse --abbrev-ref HEAD)\"}"  \
    | jq ".+ {\"commit\":\"$(git rev-parse HEAD)\"}"               \
    > /version.json)

FROM alpine:latest
RUN apk add --update bash curl jq libstdc++ libgcc

# Copy compiled binary from builder
COPY --from=builder /build/bin/* /usr/local/bin/

# Create version.txt
RUN /usr/local/bin/erigon --version | sed -e 's/erigon version \(.*\)/\1/' > /version.txt

# Add genesis mapper script
ADD genesis.json /genesis.json
ADD mapper.jq /mapper.jq

# Add the startup script
ADD erigon.sh /erigon.sh
RUN chmod +x /erigon.sh

# Add the enode URL retriever script
ADD enode.sh /hive-bin/enode.sh
RUN chmod +x /hive-bin/enode.sh


# Export the usual networking ports to allow outside access to the node
EXPOSE 8545 8546 8551 30303 30303/udp

ENTRYPOINT ["/erigon.sh"]
